SELECT
(
  SELECT
    SUM(OREO_NET_LIDQUIDATION_AMT) AS OREO_NET_LIDQUIDATION_AMT,
	SUM(OREO_VALUATION_ADJUSTMENT) AS OREO_VALUATION_ADJUSTMENT,
	SUM(OREO_CURRENT_BAL_ACCUMULATOR) AS OREO_CURRENT_BAL_ACCUMULATOR,
	SUM(OREO_LOSS_ON_SALE) AS OREO_LOSS_ON_SALE,
	SUM(LOSS_SHARE_VALUE) AS LOSS_SHARE_VALUE
  FROM
    RB_V_HST_OREO S
  WHERE
    (
      USERUPD = ${user.code}
      AND (EXISTS(SELECT 1 FROM RB_V_HST_OREO WHERE USERUPD = ${user.code}))
    )
    OR (
      DATEUPD = (SELECT MAX(DATEUPD) FROM RB_V_HST_OREO)
      AND (NOT EXISTS(SELECT 1 FROM RB_V_HST_OREO WHERE USERUPD = ${user.code}))
    )
) AS STG,
(
  SELECT
    SUM(IMPORTO_2) AS OREO_NET_LIDQUIDATION_AMT,
	SUM(IMPORTO_5) AS OREO_VALUATION_ADJUSTMENT,
	SUM(IMPORTO_8) AS OREO_CURRENT_BAL_ACCUMULATOR,
	SUM(IMPORTO_9) AS OREO_LOSS_ON_SALE,
	SUM(IMPORTO_12) AS LOSS_SHARE_VALUE
  FROM
    FORM_DATI A
    INNER JOIN
    (
      SELECT DISTINCT
        RB_F_TGK_CREATE_SCENARIO_CODE(MONTH_END_DATE) AS COD_SCENARIO,
        RB_F_TGK_CREATE_PERIOD_CODE(MONTH_END_DATE) AS COD_PERIODO,
        REPORTING_ENTITY
      FROM
        RB_V_HST_OREO S
      WHERE
        (
          USERUPD = ${user.code}
          AND (EXISTS(SELECT 1 FROM RB_V_HST_OREO WHERE USERUPD = ${user.code}))
        )
        OR (
          DATEUPD = (SELECT MAX(DATEUPD) FROM RB_V_HST_OREO)
          AND (NOT EXISTS(SELECT 1 FROM RB_V_HST_OREO WHERE USERUPD = ${user.code}))
        )
    ) S
  ON
	A.COD_SCENARIO = S.COD_SCENARIO
	AND A.COD_PERIODO = S.COD_PERIODO
	AND A.TESTO_1 = S.REPORTING_ENTITY
  WHERE
    A.COD_PROSPETTO = 'OREO'
) AS APP
FROM
  DUAL