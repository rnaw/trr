SELECT
COALESCE(A.REPORTING_ENTITY, P.REPORTING_ENTITY) AS REPORTING_ENTITY,
  COALESCE(A.INSTRUMENT_ID, P.INSTRUMENT_ID) AS INSTRUMENT_ID,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.BANK_NUMBER <> P.BANK_NUMBER
          OR A.BANK_NUMBER IS NULL AND P.BANK_NUMBER IS NOT NULL
          OR A.BANK_NUMBER IS NOT NULL AND P.BANK_NUMBER IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS BANK_NUMBER,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCOUNT_DEPOSIT_CATEGORY_CODE <> P.ACCOUNT_DEPOSIT_CATEGORY_CODE
          OR A.ACCOUNT_DEPOSIT_CATEGORY_CODE IS NULL AND P.ACCOUNT_DEPOSIT_CATEGORY_CODE IS NOT NULL
          OR A.ACCOUNT_DEPOSIT_CATEGORY_CODE IS NOT NULL AND P.ACCOUNT_DEPOSIT_CATEGORY_CODE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCOUNT_DEPOSIT_CATEGORY_CODE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCOUNT_DEPOSIT_CATEGORY_DESC <> P.ACCOUNT_DEPOSIT_CATEGORY_DESC
          OR A.ACCOUNT_DEPOSIT_CATEGORY_DESC IS NULL AND P.ACCOUNT_DEPOSIT_CATEGORY_DESC IS NOT NULL
          OR A.ACCOUNT_DEPOSIT_CATEGORY_DESC IS NOT NULL AND P.ACCOUNT_DEPOSIT_CATEGORY_DESC IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCOUNT_DEPOSIT_CATEGORY_DESC,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCOUNT_TYPE_CODE <> P.ACCOUNT_TYPE_CODE
          OR A.ACCOUNT_TYPE_CODE IS NULL AND P.ACCOUNT_TYPE_CODE IS NOT NULL
          OR A.ACCOUNT_TYPE_CODE IS NOT NULL AND P.ACCOUNT_TYPE_CODE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCOUNT_TYPE_CODE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCOUNT_TYPE_DESCRIPTION <> P.ACCOUNT_TYPE_DESCRIPTION
          OR A.ACCOUNT_TYPE_DESCRIPTION IS NULL AND P.ACCOUNT_TYPE_DESCRIPTION IS NOT NULL
          OR A.ACCOUNT_TYPE_DESCRIPTION IS NOT NULL AND P.ACCOUNT_TYPE_DESCRIPTION IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCOUNT_TYPE_DESCRIPTION,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCOUNT_RETIREMENT_PLAN_TYPE <> P.ACCOUNT_RETIREMENT_PLAN_TYPE
          OR A.ACCOUNT_RETIREMENT_PLAN_TYPE IS NULL AND P.ACCOUNT_RETIREMENT_PLAN_TYPE IS NOT NULL
          OR A.ACCOUNT_RETIREMENT_PLAN_TYPE IS NOT NULL AND P.ACCOUNT_RETIREMENT_PLAN_TYPE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCOUNT_RETIREMENT_PLAN_TYPE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.OPERATING_UNIT <> P.OPERATING_UNIT
          OR A.OPERATING_UNIT IS NULL AND P.OPERATING_UNIT IS NOT NULL
          OR A.OPERATING_UNIT IS NOT NULL AND P.OPERATING_UNIT IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS OPERATING_UNIT,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.BRANCH_NUMBER <> P.BRANCH_NUMBER
          OR A.BRANCH_NUMBER IS NULL AND P.BRANCH_NUMBER IS NOT NULL
          OR A.BRANCH_NUMBER IS NOT NULL AND P.BRANCH_NUMBER IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS BRANCH_NUMBER,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CUSTOMER_NAME <> P.CUSTOMER_NAME
          OR A.CUSTOMER_NAME IS NULL AND P.CUSTOMER_NAME IS NOT NULL
          OR A.CUSTOMER_NAME IS NOT NULL AND P.CUSTOMER_NAME IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CUSTOMER_NAME,
COALESCE(A.ACCOUNT_LEDGER_BALANCE,0) - COALESCE(P.ACCOUNT_LEDGER_BALANCE, 0) AS ACCOUNT_LEDGER_BALANCE,
COALESCE(A.ACCT_AVG_YTD_LEDGER_BAL_AMT,0) - COALESCE(P.ACCT_AVG_YTD_LEDGER_BAL_AMT, 0) AS ACCT_AVG_YTD_LEDGER_BAL_AMT,
COALESCE(A.ACCT_WAR_AVG_MTD_LGR_BAL,0) - COALESCE(P.ACCT_WAR_AVG_MTD_LGR_BAL, 0) AS ACCT_WAR_AVG_MTD_LGR_BAL,
COALESCE(A.ACCT_CTD_INT_ACCRUAL,0) - COALESCE(P.ACCT_CTD_INT_ACCRUAL, 0) AS ACCT_CTD_INT_ACCRUAL,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCT_INST_OPEN_DATE <> P.ACCT_INST_OPEN_DATE
          OR A.ACCT_INST_OPEN_DATE IS NULL AND P.ACCT_INST_OPEN_DATE IS NOT NULL
          OR A.ACCT_INST_OPEN_DATE IS NOT NULL AND P.ACCT_INST_OPEN_DATE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCT_INST_OPEN_DATE,
  CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCT_LAST_INT_DATE <> P.ACCT_LAST_INT_DATE
          OR A.ACCT_LAST_INT_DATE IS NULL AND P.ACCT_LAST_INT_DATE IS NOT NULL
          OR A.ACCT_LAST_INT_DATE IS NOT NULL AND P.ACCT_LAST_INT_DATE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCT_LAST_INT_DATE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCT_INST_CLOSED_DATE <> P.ACCT_INST_CLOSED_DATE
          OR A.ACCT_INST_CLOSED_DATE IS NULL AND P.ACCT_INST_CLOSED_DATE IS NOT NULL
          OR A.ACCT_INST_CLOSED_DATE IS NOT NULL AND P.ACCT_INST_CLOSED_DATE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCT_INST_CLOSED_DATE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.MATURITY_DATE <> P.MATURITY_DATE
          OR A.MATURITY_DATE IS NULL AND P.MATURITY_DATE IS NOT NULL
          OR A.MATURITY_DATE IS NOT NULL AND P.MATURITY_DATE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS MATURITY_DATE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CALL_CODE <> P.CALL_CODE
          OR A.CALL_CODE IS NULL AND P.CALL_CODE IS NOT NULL
          OR A.CALL_CODE IS NOT NULL AND P.CALL_CODE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CALL_CODE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CALL_CODE_DESC <> P.CALL_CODE_DESC
          OR A.CALL_CODE_DESC IS NULL AND P.CALL_CODE_DESC IS NOT NULL
          OR A.CALL_CODE_DESC IS NOT NULL AND P.CALL_CODE_DESC IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CALL_CODE_DESC,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CURRENCY_CODE <> P.CURRENCY_CODE
          OR A.CURRENCY_CODE IS NULL AND P.CURRENCY_CODE IS NOT NULL
          OR A.CURRENCY_CODE IS NOT NULL AND P.CURRENCY_CODE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CURRENCY_CODE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ORIGINATION_DATE <> P.ORIGINATION_DATE
          OR A.ORIGINATION_DATE IS NULL AND P.ORIGINATION_DATE IS NOT NULL
          OR A.ORIGINATION_DATE IS NOT NULL AND P.ORIGINATION_DATE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ORIGINATION_DATE,
COALESCE(A.REMAINING_MATURITY_DAYS,0) - COALESCE(P.REMAINING_MATURITY_DAYS, 0) AS REMAINING_MATURITY_DAYS,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.MATURITY_BUCKETS <> P.MATURITY_BUCKETS
          OR A.MATURITY_BUCKETS IS NULL AND P.MATURITY_BUCKETS IS NOT NULL
          OR A.MATURITY_BUCKETS IS NOT NULL AND P.MATURITY_BUCKETS IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS MATURITY_BUCKETS,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.BROKERED_DEPOSITS <> P.BROKERED_DEPOSITS
          OR A.BROKERED_DEPOSITS IS NULL AND P.BROKERED_DEPOSITS IS NOT NULL
          OR A.BROKERED_DEPOSITS IS NOT NULL AND P.BROKERED_DEPOSITS IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS BROKERED_DEPOSITS,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.UNDER_OVER_BALANCE <> P.UNDER_OVER_BALANCE
          OR A.UNDER_OVER_BALANCE IS NULL AND P.UNDER_OVER_BALANCE IS NOT NULL
          OR A.UNDER_OVER_BALANCE IS NOT NULL AND P.UNDER_OVER_BALANCE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS UNDER_OVER_BALANCE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.TRANSACTION_NON_TRANSACTION_YN <> P.TRANSACTION_NON_TRANSACTION_YN
          OR A.TRANSACTION_NON_TRANSACTION_YN IS NULL AND P.TRANSACTION_NON_TRANSACTION_YN IS NOT NULL
          OR A.TRANSACTION_NON_TRANSACTION_YN IS NOT NULL AND P.TRANSACTION_NON_TRANSACTION_YN IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS TRANSACTION_NON_TRANSACTION_YN,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.INTEREST_BEARING_YN <> P.INTEREST_BEARING_YN
          OR A.INTEREST_BEARING_YN IS NULL AND P.INTEREST_BEARING_YN IS NOT NULL
          OR A.INTEREST_BEARING_YN IS NOT NULL AND P.INTEREST_BEARING_YN IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS INTEREST_BEARING_YN,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.INTERCOMPANY <> P.INTERCOMPANY
          OR A.INTERCOMPANY IS NULL AND P.INTERCOMPANY IS NOT NULL
          OR A.INTERCOMPANY IS NOT NULL AND P.INTERCOMPANY IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS INTERCOMPANY,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CONSOL_NODE <> P.CONSOL_NODE
          OR A.CONSOL_NODE IS NULL AND P.CONSOL_NODE IS NOT NULL
          OR A.CONSOL_NODE IS NOT NULL AND P.CONSOL_NODE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CONSOL_NODE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.BUSINESS_UNIT <> P.BUSINESS_UNIT
          OR A.BUSINESS_UNIT IS NULL AND P.BUSINESS_UNIT IS NOT NULL
          OR A.BUSINESS_UNIT IS NOT NULL AND P.BUSINESS_UNIT IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS BUSINESS_UNIT,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.GL_KEY_CODE <> P.GL_KEY_CODE
          OR A.GL_KEY_CODE IS NULL AND P.GL_KEY_CODE IS NOT NULL
          OR A.GL_KEY_CODE IS NOT NULL AND P.GL_KEY_CODE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS GL_KEY_CODE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.GL_KEY_CODE_DESC <> P.GL_KEY_CODE_DESC
          OR A.GL_KEY_CODE_DESC IS NULL AND P.GL_KEY_CODE_DESC IS NOT NULL
          OR A.GL_KEY_CODE_DESC IS NOT NULL AND P.GL_KEY_CODE_DESC IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS GL_KEY_CODE_DESC,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CURRENCY_USQ <> P.CURRENCY_USQ
          OR A.CURRENCY_USQ IS NULL AND P.CURRENCY_USQ IS NOT NULL
          OR A.CURRENCY_USQ IS NOT NULL AND P.CURRENCY_USQ IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CURRENCY_USQ,
COALESCE(A.BASE_EQUIVALENT,0) - COALESCE(P.BASE_EQUIVALENT, 0) AS BASE_EQUIVALENT,
COALESCE(A.PRINCIPAL_ORIG_CCY,0) - COALESCE(P.PRINCIPAL_ORIG_CCY, 0) AS PRINCIPAL_ORIG_CCY,
COALESCE(A.DISCOUNT_GIVEN_ORIG_CCY,0) - COALESCE(P.DISCOUNT_GIVEN_ORIG_CCY, 0) AS DISCOUNT_GIVEN_ORIG_CCY,
COALESCE(A.TRANS_ACCT_ORIG_CCY,0) - COALESCE(P.TRANS_ACCT_ORIG_CCY, 0) AS TRANS_ACCT_ORIG_CCY,
COALESCE(A.PRINCIPAL_BASE_EQ,0) - COALESCE(P.PRINCIPAL_BASE_EQ, 0) AS PRINCIPAL_BASE_EQ,
COALESCE(A.DISCOUNT_GIVEN_BASE_EQ,0) - COALESCE(P.DISCOUNT_GIVEN_BASE_EQ, 0) AS DISCOUNT_GIVEN_BASE_EQ,
COALESCE(A.TRANS_ACCT_BASE_EQ,0) - COALESCE(P.TRANS_ACCT_BASE_EQ, 0) AS TRANS_ACCT_BASE_EQ,
COALESCE(A.DISCOUNT_RECEIVED_ORIG_CCY,0) - COALESCE(P.DISCOUNT_RECEIVED_ORIG_CCY, 0) AS DISCOUNT_RECEIVED_ORIG_CCY,
COALESCE(A.ACCRUED_INTEREST_ORIG_CCY,0) - COALESCE(P.ACCRUED_INTEREST_ORIG_CCY, 0) AS ACCRUED_INTEREST_ORIG_CCY,
COALESCE(A.ACCRUED_INTEREST_ORIG_CCY_2,0) - COALESCE(P.ACCRUED_INTEREST_ORIG_CCY_2, 0) AS ACCRUED_INTEREST_ORIG_CCY_2,
COALESCE(A.DISCOUNT_RECEIVED_BASE_EQ,0) - COALESCE(P.DISCOUNT_RECEIVED_BASE_EQ, 0) AS DISCOUNT_RECEIVED_BASE_EQ,
COALESCE(A.ACCRUED_INTEREST_BASE_EQ,0) - COALESCE(P.ACCRUED_INTEREST_BASE_EQ, 0) AS ACCRUED_INTEREST_BASE_EQ,
COALESCE(A.ACCRUED_INTEREST_BASE_EQ_2,0) - COALESCE(P.ACCRUED_INTEREST_BASE_EQ_2, 0) AS ACCRUED_INTEREST_BASE_EQ_2,
COALESCE(A.INCOME_EXPENSE_ORIG_CCY_1,0) - COALESCE(P.INCOME_EXPENSE_ORIG_CCY_1, 0) AS INCOME_EXPENSE_ORIG_CCY_1,
COALESCE(A.INCOME_EXPENSE_ORIG_CCY_2,0) - COALESCE(P.INCOME_EXPENSE_ORIG_CCY_2, 0) AS INCOME_EXPENSE_ORIG_CCY_2,
COALESCE(A.INCOME_EXPENSE_ORIG_CCY_3,0) - COALESCE(P.INCOME_EXPENSE_ORIG_CCY_3, 0) AS INCOME_EXPENSE_ORIG_CCY_3,
COALESCE(A.INCOME_EXPENSE_ORIG_CCY_4,0) - COALESCE(P.INCOME_EXPENSE_ORIG_CCY_4, 0) AS INCOME_EXPENSE_ORIG_CCY_4,
COALESCE(A.INCOME_EXPENSE_ORIG_CCY_5,0) - COALESCE(P.INCOME_EXPENSE_ORIG_CCY_5, 0) AS INCOME_EXPENSE_ORIG_CCY_5,
COALESCE(A.INCOME_EXPENSE_BASE_EQ_1,0) - COALESCE(P.INCOME_EXPENSE_BASE_EQ_1, 0) AS INCOME_EXPENSE_BASE_EQ_1,
COALESCE(A.INCOME_EXPENSE_BASE_EQ_2,0) - COALESCE(P.INCOME_EXPENSE_BASE_EQ_2, 0) AS INCOME_EXPENSE_BASE_EQ_2,
COALESCE(A.INCOME_EXPENSE_BASE_EQ_3,0) - COALESCE(P.INCOME_EXPENSE_BASE_EQ_3, 0) AS INCOME_EXPENSE_BASE_EQ_3,
COALESCE(A.INCOME_EXPENSE_BASE_EQ_4,0) - COALESCE(P.INCOME_EXPENSE_BASE_EQ_4, 0) AS INCOME_EXPENSE_BASE_EQ_4,
COALESCE(A.INCOME_EXPENSE_BASE_EQ_5,0) - COALESCE(P.INCOME_EXPENSE_BASE_EQ_5, 0) AS INCOME_EXPENSE_BASE_EQ_5,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.IRA_INDICATOR <> P.IRA_INDICATOR
          OR A.IRA_INDICATOR IS NULL AND P.IRA_INDICATOR IS NOT NULL
          OR A.IRA_INDICATOR IS NOT NULL AND P.IRA_INDICATOR IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS IRA_INDICATOR,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.FED_FUNDS_YN <> P.FED_FUNDS_YN
          OR A.FED_FUNDS_YN IS NULL AND P.FED_FUNDS_YN IS NOT NULL
          OR A.FED_FUNDS_YN IS NOT NULL AND P.FED_FUNDS_YN IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS FED_FUNDS_YN,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.UNDER_OVER_BALANCE_2 <> P.UNDER_OVER_BALANCE_2
          OR A.UNDER_OVER_BALANCE_2 IS NULL AND P.UNDER_OVER_BALANCE_2 IS NOT NULL
          OR A.UNDER_OVER_BALANCE_2 IS NOT NULL AND P.UNDER_OVER_BALANCE_2 IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS UNDER_OVER_BALANCE_2,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.MATURITY_BUCKETS_2 <> P.MATURITY_BUCKETS_2
          OR A.MATURITY_BUCKETS_2 IS NULL AND P.MATURITY_BUCKETS_2 IS NOT NULL
          OR A.MATURITY_BUCKETS_2 IS NOT NULL AND P.MATURITY_BUCKETS_2 IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS MATURITY_BUCKETS_2,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.MATURITY_BUCKETS_3 <> P.MATURITY_BUCKETS_3
          OR A.MATURITY_BUCKETS_3 IS NULL AND P.MATURITY_BUCKETS_3 IS NOT NULL
          OR A.MATURITY_BUCKETS_3 IS NOT NULL AND P.MATURITY_BUCKETS_3 IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS MATURITY_BUCKETS_3,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CUSTOMER_ID <> P.CUSTOMER_ID
          OR A.CUSTOMER_ID IS NULL AND P.CUSTOMER_ID IS NOT NULL
          OR A.CUSTOMER_ID IS NOT NULL AND P.CUSTOMER_ID IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CUSTOMER_ID,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CUSTOMER_TYPE <> P.CUSTOMER_TYPE
          OR A.CUSTOMER_TYPE IS NULL AND P.CUSTOMER_TYPE IS NOT NULL
          OR A.CUSTOMER_TYPE IS NOT NULL AND P.CUSTOMER_TYPE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CUSTOMER_TYPE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.FOREIGN_DOMESTIC <> P.FOREIGN_DOMESTIC
          OR A.FOREIGN_DOMESTIC IS NULL AND P.FOREIGN_DOMESTIC IS NOT NULL
          OR A.FOREIGN_DOMESTIC IS NOT NULL AND P.FOREIGN_DOMESTIC IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS FOREIGN_DOMESTIC,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.COUNTRY_CODE <> P.COUNTRY_CODE
          OR A.COUNTRY_CODE IS NULL AND P.COUNTRY_CODE IS NOT NULL
          OR A.COUNTRY_CODE IS NOT NULL AND P.COUNTRY_CODE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS COUNTRY_CODE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.COUNTRY_DESC <> P.COUNTRY_DESC
          OR A.COUNTRY_DESC IS NULL AND P.COUNTRY_DESC IS NOT NULL
          OR A.COUNTRY_DESC IS NOT NULL AND P.COUNTRY_DESC IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS COUNTRY_DESC,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CIF_TYPE <> P.CIF_TYPE
          OR A.CIF_TYPE IS NULL AND P.CIF_TYPE IS NOT NULL
          OR A.CIF_TYPE IS NOT NULL AND P.CIF_TYPE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CIF_TYPE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CIF_TYPE_DESCRIPTION <> P.CIF_TYPE_DESCRIPTION
          OR A.CIF_TYPE_DESCRIPTION IS NULL AND P.CIF_TYPE_DESCRIPTION IS NOT NULL
          OR A.CIF_TYPE_DESCRIPTION IS NOT NULL AND P.CIF_TYPE_DESCRIPTION IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CIF_TYPE_DESCRIPTION,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A."DEPO_NON-DEPO" <> P."DEPO_NON-DEPO"
          OR A."DEPO_NON-DEPO" IS NULL AND P."DEPO_NON-DEPO" IS NOT NULL
          OR A."DEPO_NON-DEPO" IS NOT NULL AND P."DEPO_NON-DEPO" IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS "DEPO_NON-DEPO",
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.SOURCE <> P.SOURCE
          OR A.SOURCE IS NULL AND P.SOURCE IS NOT NULL
          OR A.SOURCE IS NOT NULL AND P.SOURCE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS SOURCE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.IBF_DEPOSIT_COLUMN_YN <> P.IBF_DEPOSIT_COLUMN_YN
          OR A.IBF_DEPOSIT_COLUMN_YN IS NULL AND P.IBF_DEPOSIT_COLUMN_YN IS NOT NULL
          OR A.IBF_DEPOSIT_COLUMN_YN IS NOT NULL AND P.IBF_DEPOSIT_COLUMN_YN IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS IBF_DEPOSIT_COLUMN_YN,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.TRADE_ID <> P.TRADE_ID
          OR A.TRADE_ID IS NULL AND P.TRADE_ID IS NOT NULL
          OR A.TRADE_ID IS NOT NULL AND P.TRADE_ID IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS TRADE_ID,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.REPORTABLE_Y_N <> P.REPORTABLE_Y_N
          OR A.REPORTABLE_Y_N IS NULL AND P.REPORTABLE_Y_N IS NOT NULL
          OR A.REPORTABLE_Y_N IS NOT NULL AND P.REPORTABLE_Y_N IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS REPORTABLE_Y_N,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.ACCOUNT <> P.ACCOUNT
          OR A.ACCOUNT IS NULL AND P.ACCOUNT IS NOT NULL
          OR A.ACCOUNT IS NOT NULL AND P.ACCOUNT IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS ACCOUNT,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.PRODUCT <> P.PRODUCT
          OR A.PRODUCT IS NULL AND P.PRODUCT IS NOT NULL
          OR A.PRODUCT IS NOT NULL AND P.PRODUCT IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS PRODUCT,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.DEPTID <> P.DEPTID
          OR A.DEPTID IS NULL AND P.DEPTID IS NOT NULL
          OR A.DEPTID IS NOT NULL AND P.DEPTID IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS DEPTID,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.CUST_CLASS <> P.CUST_CLASS
          OR A.CUST_CLASS IS NULL AND P.CUST_CLASS IS NOT NULL
          OR A.CUST_CLASS IS NOT NULL AND P.CUST_CLASS IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS CUST_CLASS,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.AFFILIATE <> P.AFFILIATE
          OR A.AFFILIATE IS NULL AND P.AFFILIATE IS NOT NULL
          OR A.AFFILIATE IS NOT NULL AND P.AFFILIATE IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS AFFILIATE,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.DISC_GIVEN_CALL_CODE_CODEBLOCK <> P.DISC_GIVEN_CALL_CODE_CODEBLOCK
          OR A.DISC_GIVEN_CALL_CODE_CODEBLOCK IS NULL AND P.DISC_GIVEN_CALL_CODE_CODEBLOCK IS NOT NULL
          OR A.DISC_GIVEN_CALL_CODE_CODEBLOCK IS NOT NULL AND P.DISC_GIVEN_CALL_CODE_CODEBLOCK IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS DISC_GIVEN_CALL_CODE_CODEBLOCK,
CASE
    WHEN A.INSTRUMENT_ID IS NULL AND P.INSTRUMENT_ID IS NOT NULL
      THEN CAST('OLD' AS VARCHAR(8))
   WHEN P.INSTRUMENT_ID IS NULL AND A.INSTRUMENT_ID IS NOT NULL
      THEN CAST('NEW' AS VARCHAR(8))
    WHEN  A.TRANS_ACCT_CALL_CODE_CODEBLK <> P.TRANS_ACCT_CALL_CODE_CODEBLK
          OR A.TRANS_ACCT_CALL_CODE_CODEBLK IS NULL AND P.TRANS_ACCT_CALL_CODE_CODEBLK IS NOT NULL
          OR A.TRANS_ACCT_CALL_CODE_CODEBLK IS NOT NULL AND P.TRANS_ACCT_CALL_CODE_CODEBLK IS NULL
      THEN CAST('VARIANCE' AS VARCHAR(8))
    ELSE CAST('OK' AS VARCHAR(8))
  END AS TRANS_ACCT_CALL_CODE_CODEBLK,
  ${CONCATENATE($Account.code, " (", PARENT($Account(HIERARCHY("RE"))).code, " - ", PARENT($Account(HIERARCHY("RE"))).desc, ": ", $Account.attribute4, " - ", $Account.attribute5, ")")} AS LINE_ITEM
FROM
(
  SELECT
    CAST(ROW_NUMBER() OVER (PARTITION BY
      H.REPORTING_ENTITY,
      H.INSTRUMENT_ID,
      H.INSTRUMENT
      ORDER BY
		H."MONTH_END_DATE",
		H."BANK_NUMBER",
		H."ACCOUNT_DEPOSIT_CATEGORY_CODE",
		H."ACCOUNT_DEPOSIT_CATEGORY_DESC",
		H."ACCOUNT_TYPE_CODE",
		H."ACCOUNT_TYPE_DESCRIPTION",
		H."ACCOUNT_RETIREMENT_PLAN_TYPE",
		H."OPERATING_UNIT",
		H."BRANCH_NUMBER",
		H."CUSTOMER_NAME",
		H."ACCOUNT_LEDGER_BALANCE",
		H."ACCT_AVG_YTD_LEDGER_BAL_AMT",
		H."ACCT_WAR_AVG_MTD_LGR_BAL",
		H."ACCT_CTD_INT_ACCRUAL",
		H."ACCT_INST_OPEN_DATE",
		H."ACCT_LAST_INT_DATE",
		H."ACCT_INST_CLOSED_DATE",
		H."MATURITY_DATE",
		H."CALL_CODE",
		H."CALL_CODE_DESC",
		H."CURRENCY_CODE",
		H."ORIGINATION_DATE",
		H."REMAINING_MATURITY_DAYS",
		H."MATURITY_BUCKETS",
		H."BROKERED_DEPOSITS",
		H."UNDER_OVER_BALANCE",
		H."TRANSACTION_NON_TRANSACTION_YN",
		H."INTEREST_BEARING_YN",
		H."RB_ROWID",
		H."INTERCOMPANY",
		H."CONSOL_NODE",
		H."BUSINESS_UNIT",
		H."GL_KEY_CODE",
		H."GL_KEY_CODE_DESC",
		H."CURRENCY_USQ",
		H."BASE_EQUIVALENT",
		H."PRINCIPAL_ORIG_CCY",
		H."DISCOUNT_GIVEN_ORIG_CCY",
		H."TRANS_ACCT_ORIG_CCY",
		H."PRINCIPAL_BASE_EQ",
		H."DISCOUNT_GIVEN_BASE_EQ",
		H."TRANS_ACCT_BASE_EQ",
		H."DISCOUNT_RECEIVED_ORIG_CCY",
		H."ACCRUED_INTEREST_ORIG_CCY",
		H."ACCRUED_INTEREST_ORIG_CCY_2",
		H."DISCOUNT_RECEIVED_BASE_EQ",
		H."ACCRUED_INTEREST_BASE_EQ",
		H."ACCRUED_INTEREST_BASE_EQ_2",
		H."INCOME_EXPENSE_ORIG_CCY_1",
		H."INCOME_EXPENSE_ORIG_CCY_2",
		H."INCOME_EXPENSE_ORIG_CCY_3",
		H."INCOME_EXPENSE_ORIG_CCY_4",
		H."INCOME_EXPENSE_ORIG_CCY_5",
		H."INCOME_EXPENSE_BASE_EQ_1",
		H."INCOME_EXPENSE_BASE_EQ_2",
		H."INCOME_EXPENSE_BASE_EQ_3",
		H."INCOME_EXPENSE_BASE_EQ_4",
		H."INCOME_EXPENSE_BASE_EQ_5",
		H."IRA_INDICATOR",
		H."FED_FUNDS_YN",
		H."UNDER_OVER_BALANCE_2",
		H."MATURITY_BUCKETS_2",
		H."MATURITY_BUCKETS_3",
		H."CUSTOMER_ID",
		H."CUSTOMER_TYPE",
		H."FOREIGN_DOMESTIC",
		H."COUNTRY_CODE",
		H."COUNTRY_DESC",
		H."CIF_TYPE",
		H."CIF_TYPE_DESCRIPTION",
		H."DEPO_NON-DEPO",
		H."SOURCE",
		H."IBF_DEPOSIT_COLUMN_YN",
		H."TRADE_ID",
		H."REPORTABLE_Y_N",
		H."ACCOUNT",
		H."PRODUCT",
		H."DEPTID",
		H."CUST_CLASS",
		H."AFFILIATE",
		H."DISC_GIVEN_CALL_CODE_CODEBLOCK",
		H."TRANS_ACCT_CALL_CODE_CODEBLK"
    ) AS VARCHAR(255)) AS ROW_ID,
	H."MONTH_END_DATE",
	"BANK_NUMBER",
	"ACCOUNT_DEPOSIT_CATEGORY_CODE",
	"ACCOUNT_DEPOSIT_CATEGORY_DESC",
	"ACCOUNT_TYPE_CODE",
	"ACCOUNT_TYPE_DESCRIPTION",
	"ACCOUNT_RETIREMENT_PLAN_TYPE",
	"OPERATING_UNIT",
	"BRANCH_NUMBER",
	"CUSTOMER_NAME",
	"ACCOUNT_LEDGER_BALANCE",
	"ACCT_AVG_YTD_LEDGER_BAL_AMT",
	"ACCT_WAR_AVG_MTD_LGR_BAL",
	"ACCT_CTD_INT_ACCRUAL",
	"ACCT_INST_OPEN_DATE",
	"ACCT_LAST_INT_DATE",
	"ACCT_INST_CLOSED_DATE",
	"MATURITY_DATE",
	"CALL_CODE",
	"CALL_CODE_DESC",
	"CURRENCY_CODE",
	"ORIGINATION_DATE",
	"REMAINING_MATURITY_DAYS",
	"MATURITY_BUCKETS",
	"BROKERED_DEPOSITS",
	"UNDER_OVER_BALANCE",
	"TRANSACTION_NON_TRANSACTION_YN",
	"INTEREST_BEARING_YN",
	H."REPORTING_ENTITY",
  COALESCE("INSTRUMENT", "INSTRUMENT_ID", ' ') AS INSTRUMENT_ID,
	"INTERCOMPANY",
	"CONSOL_NODE",
	"BUSINESS_UNIT",
	"GL_KEY_CODE",
	"GL_KEY_CODE_DESC",
	"CURRENCY_USQ",
	"BASE_EQUIVALENT",
	"PRINCIPAL_ORIG_CCY",
	"DISCOUNT_GIVEN_ORIG_CCY",
	"TRANS_ACCT_ORIG_CCY",
	"PRINCIPAL_BASE_EQ",
	"DISCOUNT_GIVEN_BASE_EQ",
	"TRANS_ACCT_BASE_EQ",
	"DISCOUNT_RECEIVED_ORIG_CCY",
	"ACCRUED_INTEREST_ORIG_CCY",
	"ACCRUED_INTEREST_ORIG_CCY_2",
	"DISCOUNT_RECEIVED_BASE_EQ",
	"ACCRUED_INTEREST_BASE_EQ",
	"ACCRUED_INTEREST_BASE_EQ_2",
	"INCOME_EXPENSE_ORIG_CCY_1",
	"INCOME_EXPENSE_ORIG_CCY_2",
	"INCOME_EXPENSE_ORIG_CCY_3",
	"INCOME_EXPENSE_ORIG_CCY_4",
	"INCOME_EXPENSE_ORIG_CCY_5",
	"INCOME_EXPENSE_BASE_EQ_1",
	"INCOME_EXPENSE_BASE_EQ_2",
	"INCOME_EXPENSE_BASE_EQ_3",
	"INCOME_EXPENSE_BASE_EQ_4",
	"INCOME_EXPENSE_BASE_EQ_5",
	"IRA_INDICATOR",
	"FED_FUNDS_YN",
	"UNDER_OVER_BALANCE_2",
	"MATURITY_BUCKETS_2",
	"MATURITY_BUCKETS_3",
	"CUSTOMER_ID",
	"CUSTOMER_TYPE",
	"FOREIGN_DOMESTIC",
	"COUNTRY_CODE",
	"COUNTRY_DESC",
	"CIF_TYPE",
	"CIF_TYPE_DESCRIPTION",
	"DEPO_NON-DEPO",
	"SOURCE",
	"IBF_DEPOSIT_COLUMN_YN",
	"TRADE_ID",
	"REPORTABLE_Y_N",
	"ACCOUNT",
	"PRODUCT",
	"DEPTID",
	"CUST_CLASS",
	"AFFILIATE",
	"DISC_GIVEN_CALL_CODE_CODEBLOCK",
	"TRANS_ACCT_CALL_CODE_CODEBLK"
  FROM
	  RB_DRILL_INSTRUMENT DRILL
    INNER JOIN
	  FORM_DATI DATA
	  ON
      DRILL.OID_FORM_DATI = DATA.OID_FORM_DATI
    INNER JOIN
    RB_V_DEPOSITS H
    ON
      DATA.IMPORTO_1 = H.RB_ROWID
      AND DATA.TESTO_19 = H.REPORTING_ENTITY
      AND DATA.DATA_1 = H.MONTH_END_DATE
  WHERE
	  DRILL.COD_SCENARIO = ${A1}
	  AND DRILL.COD_PERIODO = ${B1}
	  AND DRILL.COD_AZIENDA IN (${$Entity.code})
	  AND DRILL.COD_CONTO IN (${$Account.code})
	  AND DRILL.COD_DEST1 IN (${$Cust_Dim1.code})
	  AND DRILL.COD_DEST2 IN (${$Cust_Dim2.code})
	  AND DRILL.COD_DEST3 IN (${$Cust_Dim3.code})
	  AND DRILL.COD_DEST4 IN (${$Cust_Dim4.code})
	  AND DRILL.COD_DEST5 IN (${$Cust_Dim5.code})
	  AND DRILL.COD_CATEGORIA IN (${$Category.code})
	UNION ALL
  SELECT
    DATA.COD_CONTO || DATA.COD_AZIENDA AS ROW_ID,
    SP.DATA_FINE AS MONTH_END_DATE,
    NULL AS "BANK_NUMBER",
    NULL AS "ACCOUNT_DEPOSIT_CATEGORY_CODE",
    NULL AS "ACCOUNT_DEPOSIT_CATEGORY_DESC",
    NULL AS "ACCOUNT_TYPE_CODE",
    NULL AS "ACCOUNT_TYPE_DESCRIPTION",
    NULL AS "ACCOUNT_RETIREMENT_PLAN_TYPE",
    CASE
        WHEN SUBSTR(DATA.COD_DEST2, 1, 4) = 'BLC_'
            THEN SUBSTR(DATA.COD_DEST2, 5)
        ELSE NULL
    END AS OPERATING_UNIT,
    NULL AS "BRANCH_NUMBER",
    NULL AS "CUSTOMER_NAME",
    SUM(CASE
        WHEN COALESCE(C.ATTRIBUTO1, 'BE') = 'BE'
            THEN NULL
        ELSE DATA.IMPORTO2 * 1000
    END) AS ACCOUNT_LEDGER_BALANCE,
    NULL AS "ACCT_AVG_YTD_LEDGER_BAL_AMT",
    NULL AS "ACCT_WAR_AVG_MTD_LGR_BAL",
    NULL AS "ACCT_CTD_INT_ACCRUAL",
    NULL AS "ACCT_INST_OPEN_DATE",
    NULL AS "ACCT_LAST_INT_DATE",
    NULL AS "ACCT_INST_CLOSED_DATE",
    NULL AS "MATURITY_DATE",
    DATA.COD_DEST5 AS "CALL_CODE",
    NULL AS "CALL_CODE_DESC",
    DATA.COD_VALUTA2 AS CURRENCY_CODE,
    NULL AS "ORIGINATION_DATE",
    NULL AS "REMAINING_MATURITY_DAYS",
    NULL AS "MATURITY_BUCKETS",
    NULL AS "BROKERED_DEPOSITS",
    NULL AS "UNDER_OVER_BALANCE",
    NULL AS "TRANSACTION_NON_TRANSACTION_YN",
    NULL AS "INTEREST_BEARING_YN",
    'ADJUSTMENT' AS "REPORTING_ENTITY",
    ' ' AS "INSTRUMENT",
    NULL AS "INTERCOMPANY",
    NULL AS "CONSOL_NODE",
    DATA.COD_AZIENDA AS BUSINESS_UNIT,
    NULL AS "GL_KEY_CODE",
    NULL AS "GL_KEY_CODE_DESC",
    DATA.COD_VALUTA AS CURRENCY_USQ,
    SUM(CASE
        WHEN COALESCE(C.ATTRIBUTO1, 'BE') = 'ALB'
            THEN NULL
        ELSE DATA.IMPORTO2 * 1000
    END) AS BASE_EQUIVALENT,
    NULL AS "PRINCIPAL_ORIG_CCY",
    NULL AS "DISCOUNT_GIVEN_ORIG_CCY",
    NULL AS "TRANS_ACCT_ORIG_CCY",
    NULL AS "PRINCIPAL_BASE_EQ",
    NULL AS "DISCOUNT_GIVEN_BASE_EQ",
    NULL AS "TRANS_ACCT_BASE_EQ",
    NULL AS "DISCOUNT_RECEIVED_ORIG_CCY",
    NULL AS "ACCRUED_INTEREST_ORIG_CCY",
    NULL AS "ACCRUED_INTEREST_ORIG_CCY_2",
    NULL AS "DISCOUNT_RECEIVED_BASE_EQ",
    NULL AS "ACCRUED_INTEREST_BASE_EQ",
    NULL AS "ACCRUED_INTEREST_BASE_EQ_2",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_1",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_2",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_3",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_4",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_5",
    NULL AS "INCOME_EXPENSE_BASE_EQ_1",
    NULL AS "INCOME_EXPENSE_BASE_EQ_2",
    NULL AS "INCOME_EXPENSE_BASE_EQ_3",
    NULL AS "INCOME_EXPENSE_BASE_EQ_4",
    NULL AS "INCOME_EXPENSE_BASE_EQ_5",
    NULL AS "IRA_INDICATOR",
    NULL AS "FED_FUNDS_YN",
    NULL AS "UNDER_OVER_BALANCE_2",
    NULL AS "MATURITY_BUCKETS_2",
    NULL AS "MATURITY_BUCKETS_3",
    NULL AS "CUSTOMER_ID",
    NULL AS "CUSTOMER_TYPE",
    NULL AS "FOREIGN_DOMESTIC",
    NULL AS "COUNTRY_CODE",
    NULL AS "COUNTRY_DESC",
    NULL AS "CIF_TYPE",
    NULL AS "CIF_TYPE_DESCRIPTION",
    NULL AS "DEPO_NON-DEPO",
    A.NOTE AS SOURCE,
    NULL AS "IBF_DEPOSIT_COLUMN_YN",
    NULL AS "TRADE_ID",
    NULL AS "REPORTABLE_Y_N",
    DATA.COD_DEST1 AS ACCOUNT,
    DATA.COD_DEST3 AS PRODUCT,
    CASE
        WHEN SUBSTR(DATA.COD_DEST2, 1, 4) = 'DPT_'
            THEN SUBSTR(DATA.COD_DEST2, 5)
        ELSE NULL
    END AS DEPTID,
    DATA.COD_DEST4 AS CUST_CLASS,
    DATA.COD_AZI_CTP AS AFFILIATE,
    NULL AS "DISC_GIVEN_CALL_CODE_CODEBLOCK",
    NULL AS "TRANS_ACCT_CALL_CODE_CODEBLK"
  FROM
	DATI_RETT_RIGA DATA
	LEFT OUTER JOIN
	DATI_RETT A
	ON
		DATA.COD_SCENARIO = A.COD_SCENARIO
		AND DATA.COD_PERIODO = A.COD_PERIODO
		AND DATA.NUM_RETTIFICA = A.NUM_RETTIFICA
	LEFT OUTER JOIN
	CONTO C
	ON
		DATA.COD_CONTO = C.COD_CONTO
	LEFT OUTER JOIN
	SCENARIO_PERIODO SP
	ON
		DATA.COD_SCENARIO = SP.COD_SCENARIO
		AND DATA.COD_PERIODO = SP.COD_PERIODO
  WHERE
	  DATA.COD_SCENARIO = ${A1}
	  AND DATA.COD_PERIODO = ${B1}
	  AND DATA.COD_AZIENDA IN (${$Entity.code})
	  AND DATA.COD_CONTO IN (${$Account.code})
	  AND DATA.COD_DEST1 IN (${$Cust_Dim1.code})
	  AND DATA.COD_DEST2 IN (${$Cust_Dim2.code})
	  AND DATA.COD_DEST3 IN (${$Cust_Dim3.code})
	  AND DATA.COD_DEST4 IN (${$Cust_Dim4.code})
	  AND DATA.COD_DEST5 IN (${$Cust_Dim5.code})
	  AND DATA.COD_CATEGORIA IN (${$Category.code})
  GROUP BY
    DATA.COD_CONTO || DATA.COD_AZIENDA,
    DATA.COD_VALUTA,
    DATA.COD_VALUTA2,
    DATA.COD_AZIENDA,
    DATA.COD_DEST3,
    DATA.COD_DEST2,
	DATA.COD_DEST1,
    DATA.COD_AZI_CTP,
    DATA.COD_DEST4,
    DATA.COD_DEST5,
    SP.DATA_FINE,
    A.NOTE
) A
FULL OUTER JOIN
(
  SELECT
    CAST(ROW_NUMBER() OVER (PARTITION BY
      H.REPORTING_ENTITY,
      H.INSTRUMENT_ID,
      H.INSTRUMENT
      ORDER BY
		H."MONTH_END_DATE",
		H."BANK_NUMBER",
		H."ACCOUNT_DEPOSIT_CATEGORY_CODE",
		H."ACCOUNT_DEPOSIT_CATEGORY_DESC",
		H."ACCOUNT_TYPE_CODE",
		H."ACCOUNT_TYPE_DESCRIPTION",
		H."ACCOUNT_RETIREMENT_PLAN_TYPE",
		H."OPERATING_UNIT",
		H."BRANCH_NUMBER",
		H."CUSTOMER_NAME",
		H."ACCOUNT_LEDGER_BALANCE",
		H."ACCT_AVG_YTD_LEDGER_BAL_AMT",
		H."ACCT_WAR_AVG_MTD_LGR_BAL",
		H."ACCT_CTD_INT_ACCRUAL",
		H."ACCT_INST_OPEN_DATE",
		H."ACCT_LAST_INT_DATE",
		H."ACCT_INST_CLOSED_DATE",
		H."MATURITY_DATE",
		H."CALL_CODE",
		H."CALL_CODE_DESC",
		H."CURRENCY_CODE",
		H."ORIGINATION_DATE",
		H."REMAINING_MATURITY_DAYS",
		H."MATURITY_BUCKETS",
		H."BROKERED_DEPOSITS",
		H."UNDER_OVER_BALANCE",
		H."TRANSACTION_NON_TRANSACTION_YN",
		H."INTEREST_BEARING_YN",
		H."RB_ROWID",
		H."INTERCOMPANY",
		H."CONSOL_NODE",
		H."BUSINESS_UNIT",
		H."GL_KEY_CODE",
		H."GL_KEY_CODE_DESC",
		H."CURRENCY_USQ",
		H."BASE_EQUIVALENT",
		H."PRINCIPAL_ORIG_CCY",
		H."DISCOUNT_GIVEN_ORIG_CCY",
		H."TRANS_ACCT_ORIG_CCY",
		H."PRINCIPAL_BASE_EQ",
		H."DISCOUNT_GIVEN_BASE_EQ",
		H."TRANS_ACCT_BASE_EQ",
		H."DISCOUNT_RECEIVED_ORIG_CCY",
		H."ACCRUED_INTEREST_ORIG_CCY",
		H."ACCRUED_INTEREST_ORIG_CCY_2",
		H."DISCOUNT_RECEIVED_BASE_EQ",
		H."ACCRUED_INTEREST_BASE_EQ",
		H."ACCRUED_INTEREST_BASE_EQ_2",
		H."INCOME_EXPENSE_ORIG_CCY_1",
		H."INCOME_EXPENSE_ORIG_CCY_2",
		H."INCOME_EXPENSE_ORIG_CCY_3",
		H."INCOME_EXPENSE_ORIG_CCY_4",
		H."INCOME_EXPENSE_ORIG_CCY_5",
		H."INCOME_EXPENSE_BASE_EQ_1",
		H."INCOME_EXPENSE_BASE_EQ_2",
		H."INCOME_EXPENSE_BASE_EQ_3",
		H."INCOME_EXPENSE_BASE_EQ_4",
		H."INCOME_EXPENSE_BASE_EQ_5",
		H."IRA_INDICATOR",
		H."FED_FUNDS_YN",
		H."UNDER_OVER_BALANCE_2",
		H."MATURITY_BUCKETS_2",
		H."MATURITY_BUCKETS_3",
		H."CUSTOMER_ID",
		H."CUSTOMER_TYPE",
		H."FOREIGN_DOMESTIC",
		H."COUNTRY_CODE",
		H."COUNTRY_DESC",
		H."CIF_TYPE",
		H."CIF_TYPE_DESCRIPTION",
		H."DEPO_NON-DEPO",
		H."SOURCE",
		H."IBF_DEPOSIT_COLUMN_YN",
		H."TRADE_ID",
		H."REPORTABLE_Y_N",
		H."ACCOUNT",
		H."PRODUCT",
		H."DEPTID",
		H."CUST_CLASS",
		H."AFFILIATE",
		H."DISC_GIVEN_CALL_CODE_CODEBLOCK",
		H."TRANS_ACCT_CALL_CODE_CODEBLK"
    ) AS VARCHAR(255)) AS ROW_ID,
	H."MONTH_END_DATE",
	"BANK_NUMBER",
	"ACCOUNT_DEPOSIT_CATEGORY_CODE",
	"ACCOUNT_DEPOSIT_CATEGORY_DESC",
	"ACCOUNT_TYPE_CODE",
	"ACCOUNT_TYPE_DESCRIPTION",
	"ACCOUNT_RETIREMENT_PLAN_TYPE",
	"OPERATING_UNIT",
	"BRANCH_NUMBER",
	"CUSTOMER_NAME",
	"ACCOUNT_LEDGER_BALANCE",
	"ACCT_AVG_YTD_LEDGER_BAL_AMT",
	"ACCT_WAR_AVG_MTD_LGR_BAL",
	"ACCT_CTD_INT_ACCRUAL",
	"ACCT_INST_OPEN_DATE",
	"ACCT_LAST_INT_DATE",
	"ACCT_INST_CLOSED_DATE",
	"MATURITY_DATE",
	"CALL_CODE",
	"CALL_CODE_DESC",
	"CURRENCY_CODE",
	"ORIGINATION_DATE",
	"REMAINING_MATURITY_DAYS",
	"MATURITY_BUCKETS",
	"BROKERED_DEPOSITS",
	"UNDER_OVER_BALANCE",
	"TRANSACTION_NON_TRANSACTION_YN",
	"INTEREST_BEARING_YN",
	H."REPORTING_ENTITY",
  COALESCE("INSTRUMENT", "INSTRUMENT_ID", ' ') AS INSTRUMENT_ID,
	"INTERCOMPANY",
	"CONSOL_NODE",
	"BUSINESS_UNIT",
	"GL_KEY_CODE",
	"GL_KEY_CODE_DESC",
	"CURRENCY_USQ",
	"BASE_EQUIVALENT",
	"PRINCIPAL_ORIG_CCY",
	"DISCOUNT_GIVEN_ORIG_CCY",
	"TRANS_ACCT_ORIG_CCY",
	"PRINCIPAL_BASE_EQ",
	"DISCOUNT_GIVEN_BASE_EQ",
	"TRANS_ACCT_BASE_EQ",
	"DISCOUNT_RECEIVED_ORIG_CCY",
	"ACCRUED_INTEREST_ORIG_CCY",
	"ACCRUED_INTEREST_ORIG_CCY_2",
	"DISCOUNT_RECEIVED_BASE_EQ",
	"ACCRUED_INTEREST_BASE_EQ",
	"ACCRUED_INTEREST_BASE_EQ_2",
	"INCOME_EXPENSE_ORIG_CCY_1",
	"INCOME_EXPENSE_ORIG_CCY_2",
	"INCOME_EXPENSE_ORIG_CCY_3",
	"INCOME_EXPENSE_ORIG_CCY_4",
	"INCOME_EXPENSE_ORIG_CCY_5",
	"INCOME_EXPENSE_BASE_EQ_1",
	"INCOME_EXPENSE_BASE_EQ_2",
	"INCOME_EXPENSE_BASE_EQ_3",
	"INCOME_EXPENSE_BASE_EQ_4",
	"INCOME_EXPENSE_BASE_EQ_5",
	"IRA_INDICATOR",
	"FED_FUNDS_YN",
	"UNDER_OVER_BALANCE_2",
	"MATURITY_BUCKETS_2",
	"MATURITY_BUCKETS_3",
	"CUSTOMER_ID",
	"CUSTOMER_TYPE",
	"FOREIGN_DOMESTIC",
	"COUNTRY_CODE",
	"COUNTRY_DESC",
	"CIF_TYPE",
	"CIF_TYPE_DESCRIPTION",
	"DEPO_NON-DEPO",
	"SOURCE",
	"IBF_DEPOSIT_COLUMN_YN",
	"TRADE_ID",
	"REPORTABLE_Y_N",
	"ACCOUNT",
	"PRODUCT",
	"DEPTID",
	"CUST_CLASS",
	"AFFILIATE",
	"DISC_GIVEN_CALL_CODE_CODEBLOCK",
	"TRANS_ACCT_CALL_CODE_CODEBLK"
  FROM
	  RB_DRILL_INSTRUMENT DRILL
    INNER JOIN
	  FORM_DATI DATA
	  ON
      DRILL.OID_FORM_DATI = DATA.OID_FORM_DATI
    INNER JOIN
    RB_V_DEPOSITS H
    ON
      DATA.IMPORTO_1 = H.RB_ROWID
      AND DATA.TESTO_19 = H.REPORTING_ENTITY
      AND DATA.DATA_1 = H.MONTH_END_DATE
  WHERE
	  DRILL.COD_SCENARIO = ${A1}
	  AND DRILL.COD_PERIODO = ${B1}
	  AND DRILL.COD_AZIENDA IN (${$Entity.code})
	  AND DRILL.COD_CONTO IN (${$Account.code})
	  AND DRILL.COD_DEST1 IN (${$Cust_Dim1.code})
	  AND DRILL.COD_DEST2 IN (${$Cust_Dim2.code})
	  AND DRILL.COD_DEST3 IN (${$Cust_Dim3.code})
	  AND DRILL.COD_DEST4 IN (${$Cust_Dim4.code})
	  AND DRILL.COD_DEST5 IN (${$Cust_Dim5.code})
	  AND DRILL.COD_CATEGORIA IN (${$Category.code})
	UNION ALL
  SELECT
    DATA.COD_CONTO || DATA.COD_AZIENDA AS ROW_ID,
    SP.DATA_FINE AS MONTH_END_DATE,
    NULL AS "BANK_NUMBER",
    NULL AS "ACCOUNT_DEPOSIT_CATEGORY_CODE",
    NULL AS "ACCOUNT_DEPOSIT_CATEGORY_DESC",
    NULL AS "ACCOUNT_TYPE_CODE",
    NULL AS "ACCOUNT_TYPE_DESCRIPTION",
    NULL AS "ACCOUNT_RETIREMENT_PLAN_TYPE",
    CASE
        WHEN SUBSTR(DATA.COD_DEST2, 1, 4) = 'BLC_'
            THEN SUBSTR(DATA.COD_DEST2, 5)
        ELSE NULL
    END AS OPERATING_UNIT,
    NULL AS "BRANCH_NUMBER",
    NULL AS "CUSTOMER_NAME",
    SUM(CASE
        WHEN COALESCE(C.ATTRIBUTO1, 'BE') = 'BE'
            THEN NULL
        ELSE DATA.IMPORTO2 * 1000
    END) AS ACCOUNT_LEDGER_BALANCE,
    NULL AS "ACCT_AVG_YTD_LEDGER_BAL_AMT",
    NULL AS "ACCT_WAR_AVG_MTD_LGR_BAL",
    NULL AS "ACCT_CTD_INT_ACCRUAL",
    NULL AS "ACCT_INST_OPEN_DATE",
    NULL AS "ACCT_LAST_INT_DATE",
    NULL AS "ACCT_INST_CLOSED_DATE",
    NULL AS "MATURITY_DATE",
    DATA.COD_DEST5 AS "CALL_CODE",
    NULL AS "CALL_CODE_DESC",
    DATA.COD_VALUTA2 AS CURRENCY_CODE,
    NULL AS "ORIGINATION_DATE",
    NULL AS "REMAINING_MATURITY_DAYS",
    NULL AS "MATURITY_BUCKETS",
    NULL AS "BROKERED_DEPOSITS",
    NULL AS "UNDER_OVER_BALANCE",
    NULL AS "TRANSACTION_NON_TRANSACTION_YN",
    NULL AS "INTEREST_BEARING_YN",
    'ADJUSTMENT' AS "REPORTING_ENTITY",
    ' ' AS "INSTRUMENT",
    NULL AS "INTERCOMPANY",
    NULL AS "CONSOL_NODE",
    DATA.COD_AZIENDA AS BUSINESS_UNIT,
    NULL AS "GL_KEY_CODE",
    NULL AS "GL_KEY_CODE_DESC",
    DATA.COD_VALUTA AS CURRENCY_USQ,
    SUM(CASE
        WHEN COALESCE(C.ATTRIBUTO1, 'BE') = 'ALB'
            THEN NULL
        ELSE DATA.IMPORTO2 * 1000
    END) AS BASE_EQUIVALENT,
    NULL AS "PRINCIPAL_ORIG_CCY",
    NULL AS "DISCOUNT_GIVEN_ORIG_CCY",
    NULL AS "TRANS_ACCT_ORIG_CCY",
    NULL AS "PRINCIPAL_BASE_EQ",
    NULL AS "DISCOUNT_GIVEN_BASE_EQ",
    NULL AS "TRANS_ACCT_BASE_EQ",
    NULL AS "DISCOUNT_RECEIVED_ORIG_CCY",
    NULL AS "ACCRUED_INTEREST_ORIG_CCY",
    NULL AS "ACCRUED_INTEREST_ORIG_CCY_2",
    NULL AS "DISCOUNT_RECEIVED_BASE_EQ",
    NULL AS "ACCRUED_INTEREST_BASE_EQ",
    NULL AS "ACCRUED_INTEREST_BASE_EQ_2",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_1",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_2",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_3",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_4",
    NULL AS "INCOME_EXPENSE_ORIG_CCY_5",
    NULL AS "INCOME_EXPENSE_BASE_EQ_1",
    NULL AS "INCOME_EXPENSE_BASE_EQ_2",
    NULL AS "INCOME_EXPENSE_BASE_EQ_3",
    NULL AS "INCOME_EXPENSE_BASE_EQ_4",
    NULL AS "INCOME_EXPENSE_BASE_EQ_5",
    NULL AS "IRA_INDICATOR",
    NULL AS "FED_FUNDS_YN",
    NULL AS "UNDER_OVER_BALANCE_2",
    NULL AS "MATURITY_BUCKETS_2",
    NULL AS "MATURITY_BUCKETS_3",
    NULL AS "CUSTOMER_ID",
    NULL AS "CUSTOMER_TYPE",
    NULL AS "FOREIGN_DOMESTIC",
    NULL AS "COUNTRY_CODE",
    NULL AS "COUNTRY_DESC",
    NULL AS "CIF_TYPE",
    NULL AS "CIF_TYPE_DESCRIPTION",
    NULL AS "DEPO_NON-DEPO",
    A.NOTE AS SOURCE,
    NULL AS "IBF_DEPOSIT_COLUMN_YN",
    NULL AS "TRADE_ID",
    NULL AS "REPORTABLE_Y_N",
    DATA.COD_DEST1 AS ACCOUNT,
    DATA.COD_DEST3 AS PRODUCT,
    CASE
        WHEN SUBSTR(DATA.COD_DEST2, 1, 4) = 'DPT_'
            THEN SUBSTR(DATA.COD_DEST2, 5)
        ELSE NULL
    END AS DEPTID,
    DATA.COD_DEST4 AS CUST_CLASS,
    DATA.COD_AZI_CTP AS AFFILIATE,
    NULL AS "DISC_GIVEN_CALL_CODE_CODEBLOCK",
    NULL AS "TRANS_ACCT_CALL_CODE_CODEBLK"
  FROM
	DATI_RETT_RIGA DATA
	LEFT OUTER JOIN
	DATI_RETT A
	ON
		DATA.COD_SCENARIO = A.COD_SCENARIO
		AND DATA.COD_PERIODO = A.COD_PERIODO
		AND DATA.NUM_RETTIFICA = A.NUM_RETTIFICA
	LEFT OUTER JOIN
	CONTO C
	ON
		DATA.COD_CONTO = C.COD_CONTO
	LEFT OUTER JOIN
	SCENARIO_PERIODO SP
	ON
		DATA.COD_SCENARIO = SP.COD_SCENARIO
		AND DATA.COD_PERIODO = SP.COD_PERIODO
  WHERE
	  DATA.COD_SCENARIO = ${A1}
	  AND DATA.COD_PERIODO = ${B1}
	  AND DATA.COD_AZIENDA IN (${$Entity.code})
	  AND DATA.COD_CONTO IN (${$Account.code})
	  AND DATA.COD_DEST1 IN (${$Cust_Dim1.code})
	  AND DATA.COD_DEST2 IN (${$Cust_Dim2.code})
	  AND DATA.COD_DEST3 IN (${$Cust_Dim3.code})
	  AND DATA.COD_DEST4 IN (${$Cust_Dim4.code})
	  AND DATA.COD_DEST5 IN (${$Cust_Dim5.code})
	  AND DATA.COD_CATEGORIA IN (${$Category.code})
  GROUP BY
    DATA.COD_CONTO || DATA.COD_AZIENDA,
    DATA.COD_VALUTA,
    DATA.COD_VALUTA2,
    DATA.COD_AZIENDA,
    DATA.COD_DEST3,
    DATA.COD_DEST2,
	DATA.COD_DEST1,
    DATA.COD_AZI_CTP,
    DATA.COD_DEST4,
    DATA.COD_DEST5,
    SP.DATA_FINE,
    A.NOTE
  ) P
ON
  A.ROW_ID = P.ROW_ID
  AND A.REPORTING_ENTITY = P.REPORTING_ENTITY
  AND (A.INSTRUMENT_ID = P.INSTRUMENT_ID)