SELECT
  COALESCE(A.REPORTING_ENTITY, P.REPORTING_ENTITY) AS REPORTING_ENTITY,
  COALESCE(A.INSTRUMENT, P.INSTRUMENT) AS INSTRUMENT,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CALL_CODE <> P.CALL_CODE
            OR A.CALL_CODE IS NULL AND P.CALL_CODE IS NOT NULL
            OR A.CALL_CODE IS NOT NULL AND P.CALL_CODE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CALL_CODE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.GL_KEY_CODE <> P.GL_KEY_CODE
            OR A.GL_KEY_CODE IS NULL AND P.GL_KEY_CODE IS NOT NULL
            OR A.GL_KEY_CODE IS NOT NULL AND P.GL_KEY_CODE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS GL_KEY_CODE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CONSOL_NODE <> P.CONSOL_NODE
            OR A.CONSOL_NODE IS NULL AND P.CONSOL_NODE IS NOT NULL
            OR A.CONSOL_NODE IS NOT NULL AND P.CONSOL_NODE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CONSOL_NODE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.BUSINESS_UNIT <> P.BUSINESS_UNIT
            OR A.BUSINESS_UNIT IS NULL AND P.BUSINESS_UNIT IS NOT NULL
            OR A.BUSINESS_UNIT IS NOT NULL AND P.BUSINESS_UNIT IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS BUSINESS_UNIT,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CURRENCY_CODE <> P.CURRENCY_CODE
            OR A.CURRENCY_CODE IS NULL AND P.CURRENCY_CODE IS NOT NULL
            OR A.CURRENCY_CODE IS NOT NULL AND P.CURRENCY_CODE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CURRENCY_CODE,
  COALESCE(A.FOREIGN_AMOUNT,0) - COALESCE(P.FOREIGN_AMOUNT, 0) AS FOREIGN_AMOUNT,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CURRENCY_USQ <> P.CURRENCY_USQ
            OR A.CURRENCY_USQ IS NULL AND P.CURRENCY_USQ IS NOT NULL
            OR A.CURRENCY_USQ IS NOT NULL AND P.CURRENCY_USQ IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CURRENCY_USQ,
  COALESCE(A.BASE_EQUIVALENT,0) - COALESCE(P.BASE_EQUIVALENT, 0) AS BASE_EQUIVALENT,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.ORIGINATION_DATE <> P.ORIGINATION_DATE
            OR A.ORIGINATION_DATE IS NULL AND P.ORIGINATION_DATE IS NOT NULL
            OR A.ORIGINATION_DATE IS NOT NULL AND P.ORIGINATION_DATE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS ORIGINATION_DATE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.MATURITY_DATE <> P.MATURITY_DATE
            OR A.MATURITY_DATE IS NULL AND P.MATURITY_DATE IS NOT NULL
            OR A.MATURITY_DATE IS NOT NULL AND P.MATURITY_DATE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS MATURITY_DATE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CUSTOMER_ID <> P.CUSTOMER_ID
            OR A.CUSTOMER_ID IS NULL AND P.CUSTOMER_ID IS NOT NULL
            OR A.CUSTOMER_ID IS NOT NULL AND P.CUSTOMER_ID IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CUSTOMER_ID,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A."DEPO_NON-DEPO" <> P."DEPO_NON-DEPO"
            OR A."DEPO_NON-DEPO" IS NULL AND P."DEPO_NON-DEPO" IS NOT NULL
            OR A."DEPO_NON-DEPO" IS NOT NULL AND P."DEPO_NON-DEPO" IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS "DEPO_NON-DEPO",
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.FOREIGN_DOMESTIC <> P.FOREIGN_DOMESTIC
            OR A.FOREIGN_DOMESTIC IS NULL AND P.FOREIGN_DOMESTIC IS NOT NULL
            OR A.FOREIGN_DOMESTIC IS NOT NULL AND P.FOREIGN_DOMESTIC IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS FOREIGN_DOMESTIC,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CANCELLABLE_Y_N <> P.CANCELLABLE_Y_N
            OR A.CANCELLABLE_Y_N IS NULL AND P.CANCELLABLE_Y_N IS NOT NULL
            OR A.CANCELLABLE_Y_N IS NOT NULL AND P.CANCELLABLE_Y_N IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CANCELLABLE_Y_N,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.MATURITY_BUCKETS <> P.MATURITY_BUCKETS
            OR A.MATURITY_BUCKETS IS NULL AND P.MATURITY_BUCKETS IS NOT NULL
            OR A.MATURITY_BUCKETS IS NOT NULL AND P.MATURITY_BUCKETS IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS MATURITY_BUCKETS,
  COALESCE(A.SECURITIZATION_EXPO,0) - COALESCE(P.SECURITIZATION_EXPO, 0) AS SECURITIZATION_EXPO,
  COALESCE(A.CREDIT_CONVERSION_FACTOR,0) - COALESCE(P.CREDIT_CONVERSION_FACTOR, 0) AS CREDIT_CONVERSION_FACTOR,
  COALESCE(A.CREDIT_EQUIVALENT_AMT,0) - COALESCE(P.CREDIT_EQUIVALENT_AMT, 0) AS CREDIT_EQUIVALENT_AMT,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.RISK_COUNTRY_CODE <> P.RISK_COUNTRY_CODE
            OR A.RISK_COUNTRY_CODE IS NULL AND P.RISK_COUNTRY_CODE IS NOT NULL
            OR A.RISK_COUNTRY_CODE IS NOT NULL AND P.RISK_COUNTRY_CODE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS RISK_COUNTRY_CODE,
  COALESCE(A.RISK_WEIGHTED_CATEGORY,0) - COALESCE(P.RISK_WEIGHTED_CATEGORY, 0) AS RISK_WEIGHTED_CATEGORY,
  COALESCE(A.RISK_WEIGHTED_ALLOCATION,0) - COALESCE(P.RISK_WEIGHTED_ALLOCATION, 0) AS RISK_WEIGHTED_ALLOCATION,
  COALESCE(A.ABCP_CONDUITS_AMT,0) - COALESCE(P.ABCP_CONDUITS_AMT, 0) AS ABCP_CONDUITS_AMT,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.TRADE_ID <> P.TRADE_ID
            OR A.TRADE_ID IS NULL AND P.TRADE_ID IS NOT NULL
            OR A.TRADE_ID IS NOT NULL AND P.TRADE_ID IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS TRADE_ID,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.REPORTABLE_Y_N <> P.REPORTABLE_Y_N
            OR A.REPORTABLE_Y_N IS NULL AND P.REPORTABLE_Y_N IS NOT NULL
            OR A.REPORTABLE_Y_N IS NOT NULL AND P.REPORTABLE_Y_N IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS REPORTABLE_Y_N,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.BU  <> P.BU 
            OR A.BU  IS NULL AND P.BU  IS NOT NULL
            OR A.BU  IS NOT NULL AND P.BU  IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS BU ,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.ACCOUNT <> P.ACCOUNT
            OR A.ACCOUNT IS NULL AND P.ACCOUNT IS NOT NULL
            OR A.ACCOUNT IS NOT NULL AND P.ACCOUNT IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS ACCOUNT,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.PRODUCT <> P.PRODUCT
            OR A.PRODUCT IS NULL AND P.PRODUCT IS NOT NULL
            OR A.PRODUCT IS NOT NULL AND P.PRODUCT IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS PRODUCT,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CUST_CLASS <> P.CUST_CLASS
            OR A.CUST_CLASS IS NULL AND P.CUST_CLASS IS NOT NULL
            OR A.CUST_CLASS IS NOT NULL AND P.CUST_CLASS IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CUST_CLASS,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.AFFILIATE <> P.AFFILIATE
            OR A.AFFILIATE IS NULL AND P.AFFILIATE IS NOT NULL
            OR A.AFFILIATE IS NOT NULL AND P.AFFILIATE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS AFFILIATE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CIF_TYPE <> P.CIF_TYPE
            OR A.CIF_TYPE IS NULL AND P.CIF_TYPE IS NOT NULL
            OR A.CIF_TYPE IS NOT NULL AND P.CIF_TYPE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CIF_TYPE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CUSTOMER_TYPE <> P.CUSTOMER_TYPE
            OR A.CUSTOMER_TYPE IS NULL AND P.CUSTOMER_TYPE IS NOT NULL
            OR A.CUSTOMER_TYPE IS NOT NULL AND P.CUSTOMER_TYPE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CUSTOMER_TYPE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.LOAN_CALL_CODE <> P.LOAN_CALL_CODE
            OR A.LOAN_CALL_CODE IS NULL AND P.LOAN_CALL_CODE IS NOT NULL
            OR A.LOAN_CALL_CODE IS NOT NULL AND P.LOAN_CALL_CODE IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS LOAN_CALL_CODE,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.FACILITY_TYPE_DESC <> P.FACILITY_TYPE_DESC
            OR A.FACILITY_TYPE_DESC IS NULL AND P.FACILITY_TYPE_DESC IS NOT NULL
            OR A.FACILITY_TYPE_DESC IS NOT NULL AND P.FACILITY_TYPE_DESC IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS FACILITY_TYPE_DESC,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CALL_CODE_CODEBLOCK <> P.CALL_CODE_CODEBLOCK
            OR A.CALL_CODE_CODEBLOCK IS NULL AND P.CALL_CODE_CODEBLOCK IS NOT NULL
            OR A.CALL_CODE_CODEBLOCK IS NOT NULL AND P.CALL_CODE_CODEBLOCK IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CALL_CODE_CODEBLOCK,
  CASE
      WHEN A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NOT NULL
        THEN CAST('OLD' AS VARCHAR(8))
     WHEN P.INSTRUMENT IS NULL AND A.INSTRUMENT IS NOT NULL
        THEN CAST('NEW' AS VARCHAR(8))
      WHEN  A.CCF_CODEBLOCK <> P.CCF_CODEBLOCK
            OR A.CCF_CODEBLOCK IS NULL AND P.CCF_CODEBLOCK IS NOT NULL
            OR A.CCF_CODEBLOCK IS NOT NULL AND P.CCF_CODEBLOCK IS NULL
        THEN CAST('VARIANCE' AS VARCHAR(8))
      ELSE CAST('OK' AS VARCHAR(8))
    END AS CCF_CODEBLOCK,
  ${CONCATENATE($Account.code, " (", PARENT($Account(HIERARCHY("RE"))).code, " - ", PARENT($Account(HIERARCHY("RE"))).desc, ": ", $Account.attribute4, " - ", $Account.attribute5, ")")} AS LINE_ITEM
FROM
(
  SELECT
    CAST(ROW_NUMBER() OVER (PARTITION BY
      REPORTING_ENTITY,
      INSTRUMENT
      ORDER BY
        CALL_CODE,
        GL_KEY_CODE,
        CONSOL_NODE,
        BUSINESS_UNIT,
        CURRENCY_CODE,
        FOREIGN_AMOUNT,
        CURRENCY_USQ,
        BASE_EQUIVALENT,
        ORIGINATION_DATE,
        MATURITY_DATE,
        CUSTOMER_ID,
        "DEPO_NON-DEPO",
        FOREIGN_DOMESTIC,
        CANCELLABLE_Y_N,
        MATURITY_BUCKETS,
        SECURITIZATION_EXPO,
        CREDIT_CONVERSION_FACTOR,
        CREDIT_EQUIVALENT_AMT,
        RISK_COUNTRY_CODE,
        RISK_WEIGHTED_CATEGORY,
        RISK_WEIGHTED_ALLOCATION,
        ABCP_CONDUITS_AMT,
        SOVERIGN_DEFAULT_Y_N,
        CRC_RATING_OF_OECD_EXPOSURES,
        TRADE_ID,
        REPORTABLE_Y_N,
        BU ,
        ACCOUNT,
        PRODUCT,
        CUST_CLASS,
        AFFILIATE,
        CIF_TYPE,
        CUSTOMER_TYPE,
        LOAN_CALL_CODE,
        FACILITY_TYPE_DESC,
        CALL_CODE_CODEBLOCK,
        CCF_CODEBLOCK
    ) AS VARCHAR2(255)) AS ROW_ID,
    REPORTING_ENTITY,
    INSTRUMENT,
    CALL_CODE,
    CALL_CODE_DESC,
    GL_KEY_CODE,
    GL_KEY_CODE_DESC,
    CONSOL_NODE,
    BUSINESS_UNIT,
    CURRENCY_CODE,
    FOREIGN_AMOUNT,
    CURRENCY_USQ,
    BASE_EQUIVALENT,
    ORIGINATION_DATE,
    MATURITY_DATE,
    REMAINING_MATURITY_DAYS,
    FRONTED_UNFUNDED_PARTICIPANTS,
    CUSTOMER_ID,
    CUSTOMER_NAME,
    "DEPO_NON-DEPO",
    FOREIGN_DOMESTIC,
    CANCELLABLE_Y_N,
    MATURITY_BUCKETS,
    SECURITIZATION_EXPO,
    CREDIT_CONVERSION_FACTOR,
    CREDIT_EQUIVALENT_AMT,
    RISK_COUNTRY,
    RISK_COUNTRY_CODE,
    RISK_WEIGHTED_CATEGORY,
    RISK_WEIGHTED_ALLOCATION,
    UMD_1,
    UMD_2,
    UMD_3,
    SECURED_Y_N,
    GUARANTEED_Y_N,
    GOVT_GUARANTEED_PERCENTAGE ,
    QUALIFIED_CENTRAL_CPT_Y_N,
    ABCP_CONDUITS_AMT,
    SOVERIGN_DEFAULT_Y_N,
    CRC_RATING_OF_OECD_EXPOSURES,
    US_GAAP_RISK_RATING,
    IFRS_RISK_RATING,
    FACILITY_LIMIT_AMOUNT,
    FACILITY_USED_AMOUNT,
    SYNDICATED_RABOSHARE,
    "SYNDICATED_RABOSHARE_%",
    SYNDICATED_PARTICIPANTS,
    "SYNDICATED_PARTICIPANTS_%",
    SOURCE,
    UMD_4,
    UMD_5,
    UMD_6,
    TRADE_ID,
    REPORTABLE_Y_N,
    BU ,
    ACCOUNT,
    PRODUCT,
    OPERATING_UNIT,
    DEPTID,
    CUST_CLASS,
    AFFILIATE,
    CIF_TYPE,
    CUSTOMER_TYPE,
    LOAN_CALL_CODE,
    PRODUCT_GROUP,
    FACILITY_TYPE,
    FACILITY_TYPE_DESC,
    CALL_CODE_CODEBLOCK,
    CCF_CODEBLOCK,
    FILLER_1,
    FILLER_2,
    FILLER_3,
    FILLER_4,
    FILLER_5,
    FILLER_6,
    FILLER_7,
    FILLER_8,
    FILLER_9,
    FILLER_10,
    FILLER_11,
    FILLER_12,
    FILLER_13,
    FILLER_14,
    FILLER_15,
    FILLER_16,
    FILLER_17,
    FILLER_18,
    FILLER_19,
    FILLER_20,
    FILLER_21,
    FILLER_22,
    FILLER_23,
    FILLER_24,
    FILLER_25
  FROM
	  RB_DRILL_INSTRUMENT DRILL
    INNER JOIN
	  FORM_DATI DATA
	  ON
      DRILL.OID_FORM_DATI = DATA.OID_FORM_DATI
    INNER JOIN
    RB_V_OFF_BS H
    ON
      DATA.IMPORTO_1 = H.RB_ROWID
      AND DATA.TESTO_1 = H.REPORTING_ENTITY
      AND DATA.DATA_1 = H.MONTH_END_DATE
  WHERE
	  DRILL.COD_SCENARIO = ${A1}
	  AND DRILL.COD_PERIODO = ${B1}
	  AND DRILL.COD_AZIENDA IN (${$Entity.code})
    AND DRILL.COD_CONTO IN (${$Account.code})
	  AND DRILL.COD_DEST1 IN (${$Cust_Dim1.code})
	  AND DRILL.COD_DEST2 IN (${$Cust_Dim2.code})
	  AND DRILL.COD_DEST3 IN (${$Cust_Dim3.code})
	  AND DRILL.COD_DEST4 IN (${$Cust_Dim4.code})
	  AND DRILL.COD_DEST5 IN (${$Cust_Dim5.code})
	  AND DRILL.COD_CATEGORIA IN (${$Category.code})
	UNION ALL
  SELECT
    DATA.COD_CONTO || DATA.COD_AZIENDA AS ROW_ID,
    NULL AS REPORTING_ENTITY,
    ' ' AS INSTRUMENT,
    NULL AS CALL_CODE,
    NULL AS CALL_CODE_DESC,
    NULL AS GL_KEY_CODE,
    NULL AS GL_KEY_CODE_DESC,
    NULL AS CONSOL_NODE,
    DATA.COD_AZIENDA AS BUSINESS_UNIT,
    NULL AS CURRENCY_CODE,
    NULL AS FOREIGN_AMOUNT,
    NULL AS CURRENCY_USQ,
    SUM(DATA.IMPORTO2 * 1000) AS BASE_EQUIVALENT,
    NULL AS ORIGINATION_DATE,
    NULL AS MATURITY_DATE,
    NULL AS REMAINING_MATURITY_DAYS,
    NULL AS FRONTED_UNFUNDED_PARTICIPANTS,
    NULL AS CUSTOMER_ID,
    NULL AS CUSTOMER_NAME,
    NULL AS "DEPO_NON-DEPO",
    NULL AS FOREIGN_DOMESTIC,
    NULL AS CANCELLABLE_Y_N,
    NULL AS MATURITY_BUCKETS,
    NULL AS SECURITIZATION_EXPO,
    NULL AS CREDIT_CONVERSION_FACTOR,
    NULL AS CREDIT_EQUIVALENT_AMT,
    NULL AS RISK_COUNTRY,
    NULL AS RISK_COUNTRY_CODE,
    NULL AS RISK_WEIGHTED_CATEGORY,
    NULL AS RISK_WEIGHTED_ALLOCATION,
    NULL AS UMD_1,
    NULL AS UMD_2,
    NULL AS UMD_3,
    NULL AS SECURED_Y_N,
    NULL AS GUARANTEED_Y_N,
    NULL AS GOVT_GUARANTEED_PERCENTAGE ,
    NULL AS QUALIFIED_CENTRAL_CPT_Y_N,
    NULL AS ABCP_CONDUITS_AMT,
    NULL AS SOVERIGN_DEFAULT_Y_N,
    NULL AS CRC_RATING_OF_OECD_EXPOSURES,
    NULL AS US_GAAP_RISK_RATING,
    NULL AS IFRS_RISK_RATING,
    NULL AS FACILITY_LIMIT_AMOUNT,
    NULL AS FACILITY_USED_AMOUNT,
    NULL AS SYNDICATED_RABOSHARE,
    NULL AS "SYNDICATED_RABOSHARE_%",
    NULL AS SYNDICATED_PARTICIPANTS,
    NULL AS "SYNDICATED_PARTICIPANTS_%",
    A.NOTE AS SOURCE,
    NULL AS UMD_4,
    NULL AS UMD_5,
    NULL AS UMD_6,
    NULL AS TRADE_ID,
    NULL AS REPORTABLE_Y_N,
    NULL AS BU ,
    NULL AS ACCOUNT,
    DATA.COD_DEST3 AS PRODUCT,
    DATA.COD_DEST2 AS OPERATING_UNIT,
    NULL AS DEPTID,
    DATA.COD_DEST4 AS CUST_CLASS,
    DATA.COD_AZI_CTP AS AFFILIATE,
    NULL AS CIF_TYPE,
    NULL AS CUSTOMER_TYPE,
    NULL AS LOAN_CALL_CODE,
    NULL AS PRODUCT_GROUP,
    NULL AS FACILITY_TYPE,
    NULL AS FACILITY_TYPE_DESC,
    NULL AS CALL_CODE_CODEBLOCK,
    NULL AS CCF_CODEBLOCK,
    NULL AS FILLER_1,
    NULL AS FILLER_2,
    NULL AS FILLER_3,
    NULL AS FILLER_4,
    NULL AS FILLER_5,
    NULL AS FILLER_6,
    NULL AS FILLER_7,
    NULL AS FILLER_8,
    NULL AS FILLER_9,
    NULL AS FILLER_10,
    NULL AS FILLER_11,
    NULL AS FILLER_12,
    NULL AS FILLER_13,
    NULL AS FILLER_14,
    NULL AS FILLER_15,
    NULL AS FILLER_16,
    NULL AS FILLER_17,
    NULL AS FILLER_18,
    NULL AS FILLER_19,
    NULL AS FILLER_20,
    NULL AS FILLER_21,
    NULL AS FILLER_22,
    NULL AS FILLER_23,
    NULL AS FILLER_24,
    NULL AS FILLER_25
  FROM
	DATI_RETT_RIGA DATA
	LEFT OUTER JOIN
	DATI_RETT A
	ON
		DATA.COD_SCENARIO = A.COD_SCENARIO
		AND DATA.COD_PERIODO = A.COD_PERIODO
		AND DATA.NUM_RETTIFICA = A.NUM_RETTIFICA
  WHERE
	  DATA.COD_SCENARIO = ${A1}
	  AND DATA.COD_PERIODO = ${B1}
	  AND DATA.COD_AZIENDA IN (${$Entity.code})
	  AND DATA.COD_CONTO IN (${$Account.code})
	  AND DATA.COD_DEST1 IN (${$Cust_Dim1.code})
	  AND DATA.COD_DEST2 IN (${$Cust_Dim2.code})
	  AND DATA.COD_DEST3 IN (${$Cust_Dim3.code})
	  AND DATA.COD_DEST4 IN (${$Cust_Dim4.code})
	  AND DATA.COD_DEST5 IN (${$Cust_Dim5.code})
	  AND DATA.COD_CATEGORIA IN (${$Category.code})
  GROUP BY
    DATA.COD_CONTO || DATA.COD_AZIENDA,
    DATA.COD_VALUTA,
    DATA.COD_AZIENDA,
    DATA.COD_DEST3,
    DATA.COD_DEST2,
    DATA.COD_AZI_CTP,
    DATA.COD_DEST4,
    A.NOTE
) A
FULL OUTER JOIN
(
  SELECT
    CAST(ROW_NUMBER() OVER (PARTITION BY
      REPORTING_ENTITY,
      INSTRUMENT
      ORDER BY
        CALL_CODE,
        GL_KEY_CODE,
        CONSOL_NODE,
        BUSINESS_UNIT,
        CURRENCY_CODE,
        FOREIGN_AMOUNT,
        CURRENCY_USQ,
        BASE_EQUIVALENT,
        ORIGINATION_DATE,
        MATURITY_DATE,
        CUSTOMER_ID,
        "DEPO_NON-DEPO",
        FOREIGN_DOMESTIC,
        CANCELLABLE_Y_N,
        MATURITY_BUCKETS,
        SECURITIZATION_EXPO,
        CREDIT_CONVERSION_FACTOR,
        CREDIT_EQUIVALENT_AMT,
        RISK_COUNTRY_CODE,
        RISK_WEIGHTED_CATEGORY,
        RISK_WEIGHTED_ALLOCATION,
        ABCP_CONDUITS_AMT,
        SOVERIGN_DEFAULT_Y_N,
        CRC_RATING_OF_OECD_EXPOSURES,
        TRADE_ID,
        REPORTABLE_Y_N,
        BU ,
        ACCOUNT,
        PRODUCT,
        CUST_CLASS,
        AFFILIATE,
        CIF_TYPE,
        CUSTOMER_TYPE,
        LOAN_CALL_CODE,
        FACILITY_TYPE_DESC,
        CALL_CODE_CODEBLOCK,
        CCF_CODEBLOCK
    ) AS VARCHAR2(255)) AS ROW_ID,
    REPORTING_ENTITY,
    INSTRUMENT,
    CALL_CODE,
    CALL_CODE_DESC,
    GL_KEY_CODE,
    GL_KEY_CODE_DESC,
    CONSOL_NODE,
    BUSINESS_UNIT,
    CURRENCY_CODE,
    FOREIGN_AMOUNT,
    CURRENCY_USQ,
    BASE_EQUIVALENT,
    ORIGINATION_DATE,
    MATURITY_DATE,
    REMAINING_MATURITY_DAYS,
    FRONTED_UNFUNDED_PARTICIPANTS,
    CUSTOMER_ID,
    CUSTOMER_NAME,
    "DEPO_NON-DEPO",
    FOREIGN_DOMESTIC,
    CANCELLABLE_Y_N,
    MATURITY_BUCKETS,
    SECURITIZATION_EXPO,
    CREDIT_CONVERSION_FACTOR,
    CREDIT_EQUIVALENT_AMT,
    RISK_COUNTRY,
    RISK_COUNTRY_CODE,
    RISK_WEIGHTED_CATEGORY,
    RISK_WEIGHTED_ALLOCATION,
    UMD_1,
    UMD_2,
    UMD_3,
    SECURED_Y_N,
    GUARANTEED_Y_N,
    GOVT_GUARANTEED_PERCENTAGE ,
    QUALIFIED_CENTRAL_CPT_Y_N,
    ABCP_CONDUITS_AMT,
    SOVERIGN_DEFAULT_Y_N,
    CRC_RATING_OF_OECD_EXPOSURES,
    US_GAAP_RISK_RATING,
    IFRS_RISK_RATING,
    FACILITY_LIMIT_AMOUNT,
    FACILITY_USED_AMOUNT,
    SYNDICATED_RABOSHARE,
    "SYNDICATED_RABOSHARE_%",
    SYNDICATED_PARTICIPANTS,
    "SYNDICATED_PARTICIPANTS_%",
    SOURCE,
    UMD_4,
    UMD_5,
    UMD_6,
    TRADE_ID,
    REPORTABLE_Y_N,
    BU ,
    ACCOUNT,
    PRODUCT,
    OPERATING_UNIT,
    DEPTID,
    CUST_CLASS,
    AFFILIATE,
    CIF_TYPE,
    CUSTOMER_TYPE,
    LOAN_CALL_CODE,
    PRODUCT_GROUP,
    FACILITY_TYPE,
    FACILITY_TYPE_DESC,
    CALL_CODE_CODEBLOCK,
    CCF_CODEBLOCK,
    FILLER_1,
    FILLER_2,
    FILLER_3,
    FILLER_4,
    FILLER_5,
    FILLER_6,
    FILLER_7,
    FILLER_8,
    FILLER_9,
    FILLER_10,
    FILLER_11,
    FILLER_12,
    FILLER_13,
    FILLER_14,
    FILLER_15,
    FILLER_16,
    FILLER_17,
    FILLER_18,
    FILLER_19,
    FILLER_20,
    FILLER_21,
    FILLER_22,
    FILLER_23,
    FILLER_24,
    FILLER_25
  FROM
    RB_DRILL_INSTRUMENT DRILL
    INNER JOIN
    FORM_DATI DATA
    ON
      DRILL.OID_FORM_DATI = DATA.OID_FORM_DATI
    INNER JOIN
    RB_V_OFF_BS H
    ON
      DATA.IMPORTO_1 = H.RB_ROWID
      AND DATA.TESTO_1 = H.REPORTING_ENTITY
      AND DATA.DATA_1 = H.MONTH_END_DATE
  WHERE
    DRILL.COD_SCENARIO = ${A2}
    AND DRILL.COD_PERIODO = ${B2}
    AND DRILL.COD_AZIENDA IN (${$Entity.code})
    AND DRILL.COD_CONTO IN (${$Account.code})
    AND DRILL.COD_DEST1 IN (${$Cust_Dim1.code})
    AND DRILL.COD_DEST2 IN (${$Cust_Dim2.code})
    AND DRILL.COD_DEST3 IN (${$Cust_Dim3.code})
    AND DRILL.COD_DEST4 IN (${$Cust_Dim4.code})
    AND DRILL.COD_DEST5 IN (${$Cust_Dim5.code})
    AND DRILL.COD_CATEGORIA IN (${$Category.code})
  UNION ALL
  SELECT
    DATA.COD_CONTO || DATA.COD_AZIENDA AS ROW_ID,
    NULL AS REPORTING_ENTITY,
    ' ' AS INSTRUMENT,
    NULL AS CALL_CODE,
    NULL AS CALL_CODE_DESC,
    NULL AS GL_KEY_CODE,
    NULL AS GL_KEY_CODE_DESC,
    NULL AS CONSOL_NODE,
    DATA.COD_AZIENDA AS BUSINESS_UNIT,
    NULL AS CURRENCY_CODE,
    NULL AS FOREIGN_AMOUNT,
    NULL AS CURRENCY_USQ,
    SUM(DATA.IMPORTO2 * 1000) AS BASE_EQUIVALENT,
    NULL AS ORIGINATION_DATE,
    NULL AS MATURITY_DATE,
    NULL AS REMAINING_MATURITY_DAYS,
    NULL AS FRONTED_UNFUNDED_PARTICIPANTS,
    NULL AS CUSTOMER_ID,
    NULL AS CUSTOMER_NAME,
    NULL AS "DEPO_NON-DEPO",
    NULL AS FOREIGN_DOMESTIC,
    NULL AS CANCELLABLE_Y_N,
    NULL AS MATURITY_BUCKETS,
    NULL AS SECURITIZATION_EXPO,
    NULL AS CREDIT_CONVERSION_FACTOR,
    NULL AS CREDIT_EQUIVALENT_AMT,
    NULL AS RISK_COUNTRY,
    NULL AS RISK_COUNTRY_CODE,
    NULL AS RISK_WEIGHTED_CATEGORY,
    NULL AS RISK_WEIGHTED_ALLOCATION,
    NULL AS UMD_1,
    NULL AS UMD_2,
    NULL AS UMD_3,
    NULL AS SECURED_Y_N,
    NULL AS GUARANTEED_Y_N,
    NULL AS GOVT_GUARANTEED_PERCENTAGE ,
    NULL AS QUALIFIED_CENTRAL_CPT_Y_N,
    NULL AS ABCP_CONDUITS_AMT,
    NULL AS SOVERIGN_DEFAULT_Y_N,
    NULL AS CRC_RATING_OF_OECD_EXPOSURES,
    NULL AS US_GAAP_RISK_RATING,
    NULL AS IFRS_RISK_RATING,
    NULL AS FACILITY_LIMIT_AMOUNT,
    NULL AS FACILITY_USED_AMOUNT,
    NULL AS SYNDICATED_RABOSHARE,
    NULL AS "SYNDICATED_RABOSHARE_%",
    NULL AS SYNDICATED_PARTICIPANTS,
    NULL AS "SYNDICATED_PARTICIPANTS_%",
    A.NOTE AS SOURCE,
    NULL AS UMD_4,
    NULL AS UMD_5,
    NULL AS UMD_6,
    NULL AS TRADE_ID,
    NULL AS REPORTABLE_Y_N,
    NULL AS BU ,
    NULL AS ACCOUNT,
    DATA.COD_DEST3 AS PRODUCT,
    DATA.COD_DEST2 AS OPERATING_UNIT,
    NULL AS DEPTID,
    DATA.COD_DEST4 AS CUST_CLASS,
    DATA.COD_AZI_CTP AS AFFILIATE,
    NULL AS CIF_TYPE,
    NULL AS CUSTOMER_TYPE,
    NULL AS LOAN_CALL_CODE,
    NULL AS PRODUCT_GROUP,
    NULL AS FACILITY_TYPE,
    NULL AS FACILITY_TYPE_DESC,
    NULL AS CALL_CODE_CODEBLOCK,
    NULL AS CCF_CODEBLOCK,
    NULL AS FILLER_1,
    NULL AS FILLER_2,
    NULL AS FILLER_3,
    NULL AS FILLER_4,
    NULL AS FILLER_5,
    NULL AS FILLER_6,
    NULL AS FILLER_7,
    NULL AS FILLER_8,
    NULL AS FILLER_9,
    NULL AS FILLER_10,
    NULL AS FILLER_11,
    NULL AS FILLER_12,
    NULL AS FILLER_13,
    NULL AS FILLER_14,
    NULL AS FILLER_15,
    NULL AS FILLER_16,
    NULL AS FILLER_17,
    NULL AS FILLER_18,
    NULL AS FILLER_19,
    NULL AS FILLER_20,
    NULL AS FILLER_21,
    NULL AS FILLER_22,
    NULL AS FILLER_23,
    NULL AS FILLER_24,
    NULL AS FILLER_25
  FROM
  DATI_RETT_RIGA DATA
  LEFT OUTER JOIN
  DATI_RETT A
  ON
    DATA.COD_SCENARIO = A.COD_SCENARIO
    AND DATA.COD_PERIODO = A.COD_PERIODO
    AND DATA.NUM_RETTIFICA = A.NUM_RETTIFICA
  WHERE
    DATA.COD_SCENARIO = ${A2}
    AND DATA.COD_PERIODO = ${B2}
    AND DATA.COD_AZIENDA IN (${$Entity.code})
    AND DATA.COD_CONTO IN (${$Account.code})
    AND DATA.COD_DEST1 IN (${$Cust_Dim1.code})
    AND DATA.COD_DEST2 IN (${$Cust_Dim2.code})
    AND DATA.COD_DEST3 IN (${$Cust_Dim3.code})
    AND DATA.COD_DEST4 IN (${$Cust_Dim4.code})
    AND DATA.COD_DEST5 IN (${$Cust_Dim5.code})
    AND DATA.COD_CATEGORIA IN (${$Category.code})
  GROUP BY
    DATA.COD_CONTO || DATA.COD_AZIENDA,
    DATA.COD_VALUTA,
    DATA.COD_AZIENDA,
    DATA.COD_DEST3,
    DATA.COD_DEST2,
    DATA.COD_AZI_CTP,
    DATA.COD_DEST4,
    A.NOTE
  ) P
ON
  A.ROW_ID = P.ROW_ID
  AND A.REPORTING_ENTITY = P.REPORTING_ENTITY
  AND (A.INSTRUMENT = P.INSTRUMENT OR (A.INSTRUMENT IS NULL AND P.INSTRUMENT IS NULL))